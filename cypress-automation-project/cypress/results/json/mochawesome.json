{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2021-07-09T17:34:48.855Z",
    "end": "2021-07-09T17:35:02.017Z",
    "duration": 13162,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4906d258-7f15-4139-b506-9765aa1efd17",
      "title": "",
      "fullFile": "cypress/integration/cucumber-test/atlantisLogin.feature",
      "file": "cypress/integration/cucumber-test/atlantisLogin.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1339096b-7e8a-47e0-b244-6fe567c8eafc",
          "title": "Teste de Login do sistema Atlantis Gym",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[CT_001] - Realizo um login sem informar uma senha",
              "fullTitle": "Teste de Login do sistema Atlantis Gym [CT_001] - Realizo um login sem informar uma senha",
              "timedOut": null,
              "duration": 2479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "40a73e2e-7bbc-4fb0-aa23-c95a0ef922bd",
              "parentUUID": "1339096b-7e8a-47e0-b244-6fe567c8eafc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[CT_002] - Realizo um login sem informar um email",
              "fullTitle": "Teste de Login do sistema Atlantis Gym [CT_002] - Realizo um login sem informar um email",
              "timedOut": null,
              "duration": 718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "122dd9f2-e147-4ada-8337-93c5deb9ae68",
              "parentUUID": "1339096b-7e8a-47e0-b244-6fe567c8eafc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[CT_003] - Realizo um login com um usuário inexistente",
              "fullTitle": "Teste de Login do sistema Atlantis Gym [CT_003] - Realizo um login com um usuário inexistente",
              "timedOut": null,
              "duration": 5995,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find element: `*[class^=\"Toastify__toast-body\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find element: `*[class^=\"Toastify__toast-body\"]`, but never found it.\n    at Context.eval (https://atlantis.cintra.dev/__cypress/tests?p=cypress/integration/cucumber-test/atlantisLogin.feature:78:6)\n    at Context.resolveAndRunStepDefinition (https://atlantis.cintra.dev/__cypress/tests?p=cypress/integration/cucumber-test/atlantisLogin.feature:12311:9)\n    at Context.eval (https://atlantis.cintra.dev/__cypress/tests?p=cypress/integration/cucumber-test/atlantisLogin.feature:11650:35)",
                "diff": null
              },
              "uuid": "924c3d35-a2dd-4576-9945-f17447bb743b",
              "parentUUID": "1339096b-7e8a-47e0-b244-6fe567c8eafc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40a73e2e-7bbc-4fb0-aa23-c95a0ef922bd",
            "122dd9f2-e147-4ada-8337-93c5deb9ae68"
          ],
          "failures": [
            "924c3d35-a2dd-4576-9945-f17447bb743b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9192,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}